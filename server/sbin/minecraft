#!/usr/bin/env bash

log_date() {
  date +"%F %H:%M:%S"
}

aux_port() {
  local port="${AUX_PORT:-4711}"
  if [ -f plugins/RaspberryJuice/config.yml ]; then
    local config_port="$(ruby -r yaml -e "puts YAML.load_file('plugins/RaspberryJuice/config.yml')['port']")"
    if [ -n "$config_port" ]; then
      port="$config_port"
    fi
  fi
  echo "$port"
}

load_config() {
  if [ -d config ]; then
    echo "[$(log_date)] INFO  Loading custom configuration ($(ls config | xargs))"
    cp config/* .
  fi
}

if [ "$1" == "bash" ]; then
  eval "/bin/bash"
else
  mc_port=25566
  port=${PORT:-8080}

  load_config

  # Start the TCP tunnel
  if [ -n "$NGROK_API_TOKEN" ]; then
    mkdir -p .ngrok2
    if [ ! -f .ngrok2/.ngrok2 ]; then
      cat <<YAML > .ngrok2/ngrok.yml
tunnels:
  main:
    proto: tcp
    addr: ${mc_port}
  aux:
    proto: tcp
    addr: $(aux_port)
YAML
    fi

    ngrok_cmd="ngrok start --config .ngrok2/ngrok.yml -authtoken $NGROK_API_TOKEN -log stdout --log-level debug $NGROK_OPTS main aux"
    echo "[$(log_date)] INFO  Starting ngrok on port ${mc_port}..."
    eval "$ngrok_cmd | tee ngrok.log &"
    ngrok_pid=$!
  else
    echo "[$(log_date)] WARN  No NGROK_API_TOKEN found. Server will not be publicly accessible!"
  fi

  # Do an inline sync first, then start the background job
  if [ -n "$AWS_BUCKET" ]; then
    if [ -n "$(which s3cmd)" ]; then
      echo "Starting sync..."
      minecraft-sync
      if [ "$READ_ONLY" != "true" ]; then
        eval "while true; do sleep ${AWS_SYNC_INTERVAL:-60}; minecraft-sync; done &"
        sync_pid=$!
      fi
    else
      echo "[$(log_date)] WARN  No s3cmd found. World will not be saved!"
    fi
  else
    echo "[$(log_date)] WARN  No AWS_BUCKET found. World will not be saved!"
  fi

  # create server config
  echo "server-port=${mc_port}" >> /app/server.properties
  for f in whitelist banned-players banned-ips ops; do
    test ! -f $f.json && echo -n "[]" > $f.json
  done

  echo "[$(log_date)] INFO  Starting Minecraft on port ${mc_port}"
  eval "screen -L -h 2048 -dmS minecraft java -jar $@"
  main_pid=$!

  # Flush the logfile every second, and ensure that the logfile exists
  screen -X "logfile 1" && sleep 1

  eval "tail -f screenlog.0 &"
  tail_pid=$!

  trap "kill ${ngrok_pid:-} $main_pid ${sync_pid:-} $tail_pid" SIGTERM
  trap "kill -9 ${ngrok_pid:-} $main_pid ${sync_pid:-} $tail_pid; exit" SIGKILL

  echo "[$(log_date)] INFO  Starting HTTP server"
  eval "ruby -rwebrick -e'WEBrick::HTTPServer.new(:BindAddress => \"0.0.0.0\", :Port => ${port}, :MimeTypes => {\"rhtml\" => \"text/html\"}, :DocumentRoot => Dir.pwd).start'"
fi
